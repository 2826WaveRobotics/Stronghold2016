// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "SetShooterWheelSpeed.h"
#include "../Subsystems/ShooterWheelPID.h"
#include <iostream>

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

SetShooterWheelSpeed::SetShooterWheelSpeed(WheelSpeed speed): Command() {
    m_newSpeed = speed;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void SetShooterWheelSpeed::Initialize() {
	Robot::shooterWheelPID.get()->SetSequenceSpeed(m_newSpeed);
}

// Called repeatedly when this Command is scheduled to run
void SetShooterWheelSpeed::Execute() {
//	std::cout<<"  Shooter Wheel Speed: "<<Robot::shooterWheelPID.get()->GetSpeed();
//	std::cout<<"  Shooter Wheel PID Input: "<<Robot::shooterWheelPID.get()->ReturnPIDInput();
}

// Make this return true when this Command no longer needs to run execute()
bool SetShooterWheelSpeed::IsFinished() {
	double CurrentSpeed = Robot::shooterWheelPID.get()->ReturnPIDInput();
   if(fabs (CurrentSpeed - m_newSpeed)< 50){
	   return true;
   }
   else{
	   return false;
   }
}

// Called once after isFinished returns true
void SetShooterWheelSpeed::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void SetShooterWheelSpeed::Interrupted() {

}
