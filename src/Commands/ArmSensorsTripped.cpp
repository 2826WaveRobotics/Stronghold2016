// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ArmSensorsTripped.h"
#include <iostream>

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ArmSensorsTripped::ArmSensorsTripped(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void ArmSensorsTripped::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void ArmSensorsTripped::Execute() {
}

// Make this return true when this Command no longer needs to run execute()
bool ArmSensorsTripped::IsFinished() {
    return true;
}

// Called once after isFinished returns true
void ArmSensorsTripped::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ArmSensorsTripped::Interrupted() {

}

bool ArmSensorsTripped::AreArmSensorsTripped(){
	bool prox1Tripped = RobotMap::armPIDLowBarProx1.get()->Get();
	bool prox2Tripped = RobotMap::armPIDLowBarProx2.get()->Get();
		if (prox1Tripped == true && prox2Tripped == true){
			return true;
		}
		else {
			return false;
		}
}
