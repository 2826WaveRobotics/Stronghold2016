// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "BallRelease.h"
#include <iostream>
#include "../Robot.h"


BallRelease::BallRelease(ReleaseState state): Command() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	m_ReleaseRequest = state;
}



// Called just before this Command runs the first time
void BallRelease::Initialize() {
	if(m_ReleaseRequest){
		Robot::intake.get()->SetBallRelease(Released);
	}
	else{
		Robot::intake.get()->SetBallRelease(Blocked);
	}
}
// Called repeatedly when this Command is scheduled to run
void BallRelease::Execute() {

}

// Make this return true when this Command no longer needs to run execute()
bool BallRelease::IsFinished() {
	return true;
}

// Called once after isFinished returns true
void BallRelease::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void BallRelease::Interrupted() {

}
