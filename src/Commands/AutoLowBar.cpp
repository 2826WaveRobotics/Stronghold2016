// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "AutoLowBar.h"
#include "AutoDriveDistance.h"
#include "DefenseCrossed.h"
#include "AutoDrivePower.h"
#include "../WaveConstants.h"
#include "FireSequence.h"
#include "SetArmPosition.h"
#include "SetTurretPosition.h"
#include "SetHoodPosition.h"
#include "WaveWait.h"
#include "FirePrepSequence.h"
#include "DefenseCrossedSmart.h"
#include "ResetPitchAndRoll.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

AutoLowBar::AutoLowBar() {
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

	AddSequential(new ResetPitchAndRoll());
	AddSequential(new SetTurretCylinder(Turret_Straight));
	AddParallel(new SetArmPosition(c_armLowPosition));
	AddParallel(new FirePrepSequence(Hood_Stow, Turret_Straight, Long_Shot_Angle));
	//AddSequential(new SetHoodPosition( Hood_Stow));
	AddParallel(new AutoDrivePower(.8, 0, true, false, false));
	//AddSequential(new AutoDriveDistance(-36, .8, 0)); //meaning go -36 inches, 100% power, heading of 0
	//AddSequential(new AutoDriveDistance(0, 0, 0));
	//AddSequential(new AutoDriveDistance(-74, .5, 0));
	AddSequential(new DefenseCrossedSmart(PitchStepIncrease, true, false));
	AddSequential (new WaveWait(.25));
	AddParallel(new SetArmPosition(c_armLowPosition+2)); //For Low Bar Sensing MAYBE LOWER A BIT
	AddSequential(new AutoDrivePower(0, 0, false, false, false));
	AddSequential(new AutoDrivePower(-.55, 0, false, true, false));
	//AddSequential(new SetArmPosition(c_armLowPosition + 2)); //for Low Bar sensing
	AddParallel(new AutoDrivePower(-.3, 0, false, false, false)); //Keep pressed against the low bar
	AddSequential(new SetHoodPosition(Hood_Medium));
	AddSequential(new SetTurretCylinder(Turret_Angled));
	AddSequential(new WaveWait(.5));
	AddSequential(new FireSequence());

	//commented out for stopping normal
//	AddSequential(new SetArmPosition(c_armLowPosition));
//	AddParallel(new FirePrepSequence(Hood_Stow, Turret_Straight, Long_Shot_Angle));
//	AddParallel(new AutoDrivePower(-.6, 0, true, false));
//	AddSequential(new DefenseCrossedSmart(PitchStepIncreaseBack, false, false));
//	AddSequential(new AutoDrivePower(0, 0, false, false));

		//AddSequential(new FireSequence ());

	//The Middle of The low bar defense is flat so we need to "cross" it twice
//	//AddParallel(new ArmSensorsTripped()); // ok I made this command, whether or not it works is a different story.
//
////	//Defense Is Crossed
//	AddSequential(new AutoDriveDistance(c_courtyard1, .5, 0));
////
//	AddSequential(new SetTurretPosition(1, true));
//	AddParallel(new SetHoodPosition(Hood_Medium));
	//AddSequential(new FireSequence ());
//
//	//Backing over the Defense
//	AddSequential(new AutoDriveDistance(-c_courtyard1, -.5, 0));
//	AddSequential(new DefenseCrossed (.5));
//	AddSequential(new DefenseCrossed (.5));
//	AddParallel(new AutoDrivePower (-.5,0));
//	AddSequential(new AutoDrivePower (0,0));

}
