// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "AutoRoughTerrain.h"
#include "AutoDriveDistance.h"
#include "DefenseCrossedSmart.h"
#include "AutoDrivePower.h"
#include "../WaveConstants.h"
#include "FireSequence.h"
#include "SetTurretPosition.h"
#include "ResetPitchAndRoll.h"
#include "WaveWait.h"
#include "SetArmPosition.h"
#include "SetHeading.h"
#include "FirePrepSequence.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

AutoRoughTerrain::AutoRoughTerrain() {
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

	AddSequential(new ResetPitchAndRoll());
	AddSequential(new SetArmPosition(c_armTravelPosition));
	AddParallel(new FirePrepSequence(Hood_Medium, Turret_Straight, Long_Shot_Straight));
	AddParallel(new AutoDrivePower(.8, 0, true, false, false));
	AddSequential(new DefenseCrossedSmart(PitchStepIncrease, true, false)); //need roll ?
	AddSequential (new WaveWait(.35));
	AddParallel(new AutoDrivePower(0, 0,  false, false, false));
	AddSequential(new SetArmPosition(c_armIntakePosition));
	AddSequential(new SetHeading(1, true));
	//need code for lining up
	//AddSequential(new FireSequence());

//	AddSequential(new AutoDriveDistance(-74, .5, 0));
//	AddSequential(new DefenseCrossed(0.5));
//	AddParallel(new AutoDrivePower(.5, 0,  false, false));

	//Defense Is Crossed

	//AddSequential(new AutoDriveDistance(-1, .5, 0, true));

	//AddSequential(new SetTurretPosition(1, true));
	//AddSequential(new FireSequence ());

//	//Backing over the Defense
//	AddSequential(new AutoDriveDistance(1, -.5, 0, true));
//	//AddSequential(new DefenseCrossed (.5));
//	AddParallel(new AutoDrivePower (-.5,0,  false, false));
//	AddSequential(new AutoDrivePower (0,0,  false, false));

}
